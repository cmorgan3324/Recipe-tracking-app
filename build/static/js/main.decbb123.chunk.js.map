{"version":3,"sources":["RecipeCreate.js","DeleteRecipe.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","_ref","createRecipe","initialFormState","name","cuisine","photo","ingredients","preparation","_useState","useState","_objectSpread","_useState2","_slicedToArray","formData","setFormData","handleChange","_ref2","target","_defineProperty","value","centerInput","textAlign","React","createElement","onSubmit","event","preventDefault","console","log","id","style","htmlFor","width","type","placeholder","onChange","alt","url","DeleteRecipe","deleteRecipe","onClick","RecipeList","recipes","formRows","map","index","key","src","className","RecipeData","App","setRecipes","indexToDelete","currentRecipes","filter","post","newRecipe","concat","_toConsumableArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.decbb123.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ createRecipe }) {\n  const initialFormState = {\n    name: \"\",\n    cuisine: \"\",\n    photo: \"\",\n    ingredients: \"\",\n    preparation: \"\",\n  };\n\n  const [formData, setFormData] = useState({ ...initialFormState });\n\n  const handleChange = ({ target }) => {\n    setFormData({\n      ...formData,\n      [target.name]: target.value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(formData);\n    createRecipe(formData);\n    setFormData({ ...initialFormState });\n  };\n\n  const centerInput = {\n    textAlign: \"center\",\n  };\n\n  return (\n    <form name=\"create\" onSubmit={handleSubmit}>\n      <table>\n        <tbody></tbody>\n        <tfoot>\n          <tr>\n            <td id=\"name\" style={centerInput}>\n              <label htmlFor=\"name\">\n                <input\n                  style={{ width: \"85px\" }}\n                  id=\"inputname\"\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  onChange={handleChange}\n                  value={formData.name}\n                />\n              </label>\n            </td>\n            <td id=\"cuisine\" style={centerInput}>\n              <label htmlFor=\"cuisine\">\n                <input\n                  style={{ width: \"85px\" }}\n                  id=\"inputcuisine\"\n                  type=\"text\"\n                  name=\"cuisine\"\n                  placeholder=\"Cuisine\"\n                  onChange={handleChange}\n                  value={formData.cuisine}\n                />\n              </label>\n            </td>\n            <td id=\"photo\" style={centerInput}>\n              <label htmlFor=\"photo\">\n                <input\n                  style={{ width: \"85px\" }}\n                  id=\"inputphoto\"\n                  type=\"url\"\n                  name=\"photo\"\n                  placeholder=\"URL\"\n                  alt=\"\"\n                  onChange={handleChange}\n                  value={formData.url}\n                />\n              </label>\n            </td>\n            <td id=\"ingredients\">\n              <textarea\n                id=\"inputingredients\"\n                type=\"text\"\n                name=\"ingredients\"\n                placeholder=\"Ingredients\"\n                onChange={handleChange}\n                value={formData.ingredients}\n              ></textarea>\n            </td>\n            <td id=\"prepartion\">\n              <textarea\n                id=\"inputpreparation\"\n                type=\"text\"\n                name=\"preparation\"\n                placeholder=\"Preparation\"\n                onChange={handleChange}\n                value={formData.preparation}\n              ></textarea>\n            </td>\n            <td id=\"action\">\n              <button type=\"submit\">Create</button>\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\nfunction DeleteRecipe({ deleteRecipe }) {\n  return (\n    <button name=\"delete\" onClick={deleteRecipe}>\n      Delete\n    </button>\n  );\n}\n\nexport default DeleteRecipe;\n","import React from \"react\";\nimport DeleteRecipe from \"./DeleteRecipe\";\n\nfunction RecipeList({ recipes, deleteRecipe }) {\n  const formRows = recipes.map(\n    ({ name, cuisine, photo, ingredients, preparation }, index) => (\n      <tr key={index}>\n        <td id=\"name\">{name}</td>\n        <td id=\"cuisine\">{cuisine}</td>\n        <td id=\"photo\">\n          <img src={photo} alt=\"food\" />\n        </td>\n        <td className=\"content_td\" id=\"ingredients\">\n          <p>{ingredients}</p>\n        </td>\n        <td className=\"content_td\" id=\"preparation\">\n          <p>{preparation}</p>\n        </td>\n        <td>\n          <DeleteRecipe deleteRecipe={() => deleteRecipe(index)} />\n        </td>\n      </tr>\n    )\n  );\n\n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th id=\"name\">Name</th>\n            <th id=\"cuisine\">Cuisine</th>\n            <th id=\"photo\">Photo</th>\n            <th id=\"ingredients\">Ingredients</th>\n            <th id=\"preparation\">Preparation</th>\n            <th id=\"action\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>{formRows}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n  {\n    name: \"Tuna Poke with Mango\",\n    cuisine: \"Hawaiian\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n    ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n    preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n  },\n  {\n    name: \"Guacamole\",\n    cuisine: \"Mexican\",\n    photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n    ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n    preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n  },\n];\n\nexport default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\";\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  const createRecipe = (newRecipe) =>\n    setRecipes((currentRecipes) => [...currentRecipes, newRecipe]);\n\n  const deleteRecipe = (indexToDelete) =>\n    setRecipes((currentRecipes) =>\n      currentRecipes.filter((post, index) => index !== indexToDelete)\n    );\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>DELICIOUS FOOD RECIPES</h1>\n      </header>\n      <RecipeList recipes={recipes} deleteRecipe={deleteRecipe} />\n      <RecipeCreate recipes={recipes} createRecipe={createRecipe} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}